#!/bin/bash

# ───────────────────────────────────────────────────────────────────────────────
# ╭────────────╮
# │            │
# │  KWSEARCH  │
# │            │
# ╰────────────╯

# ╭─────────╮
# │ options │
# ╰─────────╯
SHORT="f:,k,K:,m,s,t,u,y"
LONG="filter:,keyword-only,find-keyword:,multi-select,select,tridactyl,url,yank"
PARSED=$(getopt -a -n kwsearch --options "$SHORT" --longoptions "$LONG" -- "$@")

eval set -- "$PARSED"

while :
do
    case "$1" in
        -h | --help)
            cat <<EOF
USAGE: kwsearch [OPTION...]
    Access keyword bookmarks from bookmarks.json file. The bookmarks file can
    specified with the environment variable BMARKFILE.

Options:
  -f RE  --filter RE          filter bookmarks with RE
  -h,    --help               show help
  -k     --keyword-only       keyword bookmarks only
  -K KW  --find-keyword KW    find bookmark with keyword KW
  -m     --multi-select       choose multiple bookmarks with Rofi
  -s     --select             choose bookmark with Rofi
  -t     --tridactyl          format as tridactyl searchurl setting
  -u     --url                print URL only
  -y     --yank               copy output to clipboard
EOF
            exit 0
            ;;
        (-f | --filter) filter="$2"; shift 2; ;;
        (-k | --keyword-only) kwonly=t; shift; ;;
        (-K | --find-keyword) kw="$2"; shift 2; ;;
        (-m | --multi-select) multi="t"; shift; ;;
        (-s | --select) select="t"; shift; ;;
        (-t | --tridactyl) tri="t"; shift; ;;
        (-u | --url) url=t; shift; ;;
        (-y | --yank) yank=t; shift; ;;
        (--) shift; break ;;
        (*)  echo "unrecognized option: $1" >&2 ; exit 1; ;;
    esac
done

# ╭────────────╮
# │ main logic │
# ╰────────────╯
cat "${BMARKFILE:-$HOME/bookmarks/bookmarks.json}" | jq -rc '
            recurse(.children[]?)
            | select(.uri)
            | {title: .title, url: .uri, keyword: .keyword}
' | {
    # --keyword-only
    if [[ -n $kwonly ]]; then
        jq -c 'select(.keyword)';
    else cat;
    fi;
} | {
    # select by --find-keyword ?
    if [[ -n $kw ]]; then
        jq -c "select(.keyword == \"$kw\")";
    else {
        # filter results
            # filter with regex
            if [[ -n filter ]]; then grep -iP "$filter";
            else cat;
            fi;
        } | {
            # select with rofi
            if [[ -n $select ]]; then
                rofi -dmenu -i;
            elif [[ -n $multi ]]; then
                rofi -dmenu -i -multi-select;
            else cat
            fi;
        }
    fi;
} | {
    # output format
    if [[ -n $url ]]; then
        # URL only
        jq -r '.url';
    elif [[ -n $tri ]]; then
        # tridactyl searchurl
        \perl -pe 's/{"title":"(.*)","url":"(.*)","keyword":"(.*)"}/set searchurls.$3 $2/';
    else
        # JSON
        cat;
    fi;
} | {
    if [[ -n $yank ]]; then
        # put results in clipboard
        tee >(xsel -ib);
    else
        cat;
    fi;
}
