" ╭─────────╮
" │ General │
" ╰─────────╯

sanitise tridactyllocal tridactylsync

source ~/.tridactyl/sites.tri

jsb -s ~/.tridactyl/utils.js
jsb -s ~/.tridactyl/apps.js
jsb -s ~/.tridactyl/S.js
jsb -s ~/.tridactyl/js/suncalc.js
jsb -s ~/.tridactyl/js/sprintf.js
jsb -s ~/.tridactyl/sites.js
jsb -s ~/.tridactyl/personal/personal.js

jsb window.utils = utils
jsb window.apps = apps
jsb window.S = S
jsb window.sites = sites
jsb tri.sprintf = sprintf

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────────────────╮
" │ Documentation commands │
" ╰────────────────────────╯
" Create versions of definition commands taking descriptions
command docdef jsb -d¦ utils.tri.docdef(JS_ARGS)¦
" Define command with description - doesn't work with `js -d`/`jsb -d` commands
command command: docdef command
commdoc docbindmode "bind for mode with description"
command docbindmode jsb -d¦ utils.tri.docBindMode(JS_ARGS)¦

command: bind: "bind with description" docdef bind
command: ibind: "bind for insert/input-mode with description" docbindmode i
command: vbind: "bind for visual-mode with description" docbindmode visual
command: cbind: "bind for ex-mode with description" docbindmode ex
command: bindurl: "bind with description" docdef bindurl
command: set: "set with description" docdef set
command: setpref: "setpref with description" docdef setpref
command: guiset_quiet: "guiset_quiet with description" docdef guiset_quiet
command: commdoc "provide a description for a command definition on a separate line" js ;
command: bdoc "provide a description for a bind definition on a separate line" js ;

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────╮
" │ Settings │
" ╰──────────╯

" General Settings
"
set gimode nextinput
set tabclosepinned false
set relatedopenpos related
set tabopenpos last
set followpagepatterns.next \\b(forward|next|more|older)\\b|(>>|»)$|(>|»|▸|►)$|次|下|后
set followpagepatterns.prev \\b(back|prev(ious)?|less|newer)\\b|(<|«|◂|◄)$|前|上
set hintchars hjklasdfgyuiopqwertnmzxcvb
set hintfiltermode vimperator-reflow


guiset_quiet statuspanel right
guiset_quiet tabs count

jsb browser.webRequest.onHeadersReceived.addListener(tri.request.clobberCSP,{urls:["<all_urls>"],types:["main_frame"]},["blocking","responseHeaders"])

setpref browser.aboutConfig.showWarning false
setpref browser.compactmode.show true
setpref browser.tabs.tabMinWidth 120
setpref browser.urlbar.speculativeConnect.enabled false
setpref privacy.trackingprotection.enabled true

" ╭────────────╮
" │ searchurls │
" ╰────────────╯
set searchurls.g https://www.google.com.au/search?hl=en&q=%s
set searchurls.gi https://www.google.com/search?site=imghp&tbm=isch&biw=1920&q=%s
set searchurls.d https://duckduckgo.com/?q=%s
set searchurls.dgi https://duckduckgo.com/?q=%s&iar=images
set searchurls.b https://www.bing.com/search?q=%s
set searchurls.w https://en.wikipedia.org/w/index.php?search=%s
set searchurls.diw https://en.wiktionary.org/w/index.php?search=%s
set searchurls.philsep http://plato.stanford.edu/search/searcher.py?query=%s
set searchurls.u http://graphemica.com/search?q=%s
set searchurls.diu https://www.urbandictionary.com/define.php?term=%s
set searchurls.wb http://web.archive.org/web/%s
set searchurls.gh https://github.com/search?utf8=✓&q=%s&type=Repositories&ref=searchresults
set searchurls.yt https://www.youtube.com/results?search_query=%s
set searchurls.gt https://translate.google.com.au/#auto/en/%s
set searchurls.j http://jisho.org/search/%s
set searchurls.gj https://www.google.com.au/search?q=japanese+%s
set searchurls.archwiki https://wiki.archlinux.org/index.php?search=%s&title=Special%3ASearch
set searchurls.se http://stackexchange.com/search?q=%s
set searchurls.mdn https://developer.mozilla.org/en-US/search?q=%s

" ─────────────────────────────────────────────────────────────────────────────
" ╭──────────────────────────╮
" │ Browser-mode keybindings │
" ╰──────────────────────────╯
bind --mode=browser <A-,> tab #

" ─────────────────────────────────────────────────────────────────────────────
" ╭─────────────────────────╮
" │ Normal-mode keybindings │
" ╰─────────────────────────╯

bind: <CA-h> "Scroll left (50px)" scrollpx -50
bind: <CA-l> "Scroll right (50px)" scrollpx +50
bind: j "Scroll down" scrollline +5*
bind: k "Scroll up" scrollline -5*

bind: h "Move to next tab" tabprev
bind: l "Move to previous tab" tabnext

bind: H "Move back in tab history" back
bind: L "Move forward in tab history" forward

bind: p "Open url in clipboard in new tab" clipboard tabopen
bind: P "Open url in clipboard" clipboard open

commdoc myfocusinput "Focus COUNTth input field"
command myfocusinput jsb -d¦ utils.tri.myfocusinput(JS_ARGS.join(" "))¦
bind: gi "Focus COUNTth input field" myfocusinput

unbind x
bind: X "Stop loading" stop

unbind g;
bind g<C-h> showkeys g
bdoc gh "Open the previous item in tab history in an adjacent tab"
bind gh jsb tri.excmds.tabduplicate().then(t=>browser.tabs.goBack(t.id));

bind g;<C-h> showkeys g;
bind: g;; "Focus tab containing last focused input" changelistjump -1
bind: g;i "Focus nth input on page" focusinput 2
bind: g;b "Focus biggest input field on page" focusinput -b
bind: g;n "Focus input on page after last focused one" focusinput -n
bind: g;N "Focus input on page before last focused one" focusinput -N
bind: g;p "Focus first password input field on page" focusinput -p

bind: <C-v> "Enter ignore mode (disable tridactyl bindings)" nmode ignore 1 mode normal
bind: <C-z> "Enter ignore mode for one keybinding (disable tridactyl bindings)" mode ignore

unbind <C-x>
bind: <C-x><C-c> "Close all windows" qall
bind: <C-x><C-x> "Restart browser" restart

bind: <A-=> "Increment current URL by 1" urlincrement 1
bind: <A--> "Decrement current URL by 1" urlincrement -1

" ╭──────────────────╮
" │ general commands │
" ╰──────────────────╯
commdoc openorswitchc "Open an URL in current (with count: adjacent) tab, or switch to existing tab"
command openorswitchc jsb -d¦ utils.tab.openOrSwitch(JS_ARGS[1], {where: JS_ARGS[2]?"related":"here"})¦
commdoc tabopenorswitchc "Open an URL in a new final tab (count: current tab), or switch to existing tab"
command tabopenorswitchc jsb -d¦ utils.tab.openOrSwitch(JS_ARGS[1], {where: JS_ARGS[2]?"here":"last"})¦
commdoc openorswitch "Open an URL in current tab, or switch to existing tab"
command openorswitch jsb -p utils.tab.openOrSwitch(JS_ARG, {where:"here"});
commdoc tabopenorswitch "Open an URL in a new (final) tab, or switch to existing tab"
command tabopenorswitch jsb -p utils.tab.openOrSwitch(JS_ARG, {where:"last"});
commdoc tabopenorswitch_adj "Open an URL in an afjacent tab, or switch to existing tab"
command tabopenorswitch_adj jsb -p utils.tab.openOrSwitch(JS_ARG, {where:"related"});
commdoc openorsummon "Open an URL in current tab, or switch to existing tab and move adjacent"
command openorsummon jsb -p utils.tab.openOrSummon(JS_ARG, {where:"here"});
commdoc tabopenorsummon "Open an URL in a new adjacent tab, or switch to existing tab and move adjacent"
command tabopenorsummon jsb -p utils.tab.openOrSummon(JS_ARG, {where:"related"});
commdoc tabopenorsummonbg "Open an URL in a new background adjacent tab, or move existing tab adjacent"
command tabopenorsummonbg jsb -p utils.tab.openOrSummon(JS_ARG, {where:"related", background: true});

command withjs composite js
command withjsb composite jsb
command urltoggle withcutils js -d¦ cutils.urltoggleWrapper(JS_ARGS.join(" "))¦
command withcutils composite js -s ~/.tridactyl/cutils.js ;
command xdo jsb -d¦ tri.controller.acceptExCmd("exclaim_quiet xdotool" + JS_ARGS.join(" "))¦
commdoc xdoelem "Use xdotool to move to and act on element"
command xdoelem jsb -d¦ utils.xdoelemWrapper(JS_ARGS.join(" "))¦
commdoc pastef "Takes a format string and replaces ${S} with clipboard contents; used to pipe to another command"
command pastef composite jsb -p tri.excmds.getclip().then(s=>JS_ARG.replace(/\$\{s\}/g, s))

" ╭───────────╮
" │ b -- tabs │
" ╰───────────╯
unbind b

command: tabremove "Close tabs matching string" jsb -p utils.tab.remove(t=>(S.matchSmartCase(JS_ARG, t.url)));
command: tabfilter "Close tabs not matching string" jsb -p utils.tab.filter(t=>(S.matchSmartCase(JS_ARG, t.url)));
commdoc tabswitchprev "Switch to last accessed tab"
command tabswitchprev jsb -d¦ utils.tab.switchAlternate(JS_ARGS[1]||1)¦
commdoc tabswitchprev! "Switch to last accessed tab and close current tab" 
command tabswitchprev! jsb -d¦ utils.tab.switchAlternate(JS_ARGS[1]||1, {removeCurrent: true})¦
commdoc tabsummon "Move tab adjacent to current tab"
command tabsummon jsb -d¦ utils.tab.summon(JS_ARGS[1]||"$")¦
commdoc tabsummonalt "Move last accessed tab adjacent to current tab" 
command tabsummonalt jsb -d¦ utils.tab.summonAlternate(JS_ARGS[1]||1)¦
command: tabmove! "Move current tab to specified tab number" jsb -p utils.tab.move(JS_ARG);

bind: <C-a> "Switch to first tab" tabfirst
bind: <C-e> "Switch to last tab" tablast

bind b<C-h> showkeys b
bind bb "Switch to tab from completion list" fillcmdline tab

" | bd -- tabs : delete |
bind bd<C-h> showkeys bd
bind: bdm "Close tabs matching string" fillcmdline tabremove
bind: bd;m "Close tabs not matching string" fillcmdline tabfilter
bind: bdo "Close other tabs" tabonly

" | bm -- tabs : move |
bind bm<C-h> showkeys bm
bind: bmA "move alternate tab after active tab" tabsummonalt
bind: bmm "move tab to position" fillcmdline tabmove!
bind: bms "move tab after active tab" fillcmdline tabsummon
bind: bm> "move tab to start (first nonpinned position)" tabmove 0
bind: bm< "move tab to end" tabmove 1

bind: bp "Pin/unpin tab" pin
bind: b> "Close all tabs to the right" tabclosealltoright
bind: b< "Close all tabs to the left"  tabclosealltoleft

bind: C "Duplicate tab" tabduplicate
bind: <C-k> "Close all tabs to the right inclusive" composite tabclosealltoright ; tabclose
bind: <C-K> "Close all tabs to the left inclusive"  composite tabclosealltoleft  ; tabclose
bind: <A-;> "Switch to last accessed tab" tabswitchprev
bind: <A-:> "Switch to last accessed tab and close current tab" tabswitchprev!

bind: <AC-1> "Move tab to position 1" tabmove! 1
bind: <AC-2> "Move tab to position 2" tabmove! 2
bind: <AC-3> "Move tab to position 3" tabmove! 3
bind: <AC-4> "Move tab to position 4" tabmove! 4
bind: <AC-5> "Move tab to position 5" tabmove! 5
bind: <AC-6> "Move tab to position 6" tabmove! 6
bind: <AC-7> "Move tab to position 7" tabmove! 7
bind: <AC-8> "Move tab to position 8" tabmove! 8
bind: <AC-9> "Move tab to position 9" tabmove! 9
bind: <AC-0> "Move tab to final position" tabmove! 0
bind: <AC-h> "Move tab one position to right" tabmove -1
bind: <AC-l> "Move tab one position to left"  tabmove +1

" ╭─────────────────────╮
" │ w -- window/browser │
" ╰─────────────────────╯
unbind w

commdoc copyuserchrome "Copy userChrome.js from .tridactyl/css to default profile"
command copyuserchrome ! cp -v ~/.tridactyl/css/userChrome.css `echo ~/.mozilla/firefox/*.default`
command: rmuserchrome "Remove userChrome.js from default profile" ! rm ~/.mozilla/firefox/*.default/userChrome.css
commdoc bmrofi "[WHERE? BG? OPTS?] Open bookmark via rofi"
command bmrofi jsb -d¦ apps.bmrofi(JS_ARGS)¦

bind wc fillcmdline wincloseindex

" | wk -- bookmarks |
bind wk<C-h> showkeys wk
bind: wkk "Open bookmark in last tab [Rofi]" bmrofi
bind: wka "Open bookmark in adjacent tab [Rofi]" bmrofi related
bind: wkb "Open bookmark in background adjacent tab [Rofi]" bmrofi related t
bind: wko "Open bookmark in current tab [Rofi]" bmrofi here

bind: wm "Toggle mute tab" mute toggle
bind: wM "Mute all tabs" mute all
bind: wr "Reload tridactylrc file" source ~/.tridactyl/tridactylrc
bind: wsu "Copy userChrome.css from .tridactyl/css to default profile directory" copyuserchrome
bind: wsU "Copy userChrome.css and restart browser" composite copyuserchrome ; restart

bind: wtt "toggle tab bar" xdo key ctrl+B
bind: ww "Open URL in new window" fillcmdline winopen
bind: wx "dismiss update notification" xdo mousemove 1740 230 click 1


" ╭─────────────╮
" │ s -- search │
" ╰─────────────╯
unbind s
unbind /

commdoc kwsearch "Keyword bookmark search in last tab"
command kwsearch jsb -d¦ apps.kwsearch(JS_ARGS)¦
commdoc kwsearch_adj "Keyword bookmark search in adjacent tab"
command kwsearch_adj jsb -d¦ apps.kwsearch(JS_ARGS, {where: "related"})¦
commdoc kwsearch_bg   "Keyword bookmark search in background adjacent tab"
command kwsearch_bg   jsb -d¦ apps.kwsearch(JS_ARGS, {where: "related", background: true})¦
commdoc kwsearch_here "Keyword bookmark search in current tab"
command kwsearch_here jsb -d¦ apps.kwsearch(JS_ARGS, {where: "here"})¦
commdoc kwrofi "Keyword bookmark search in current tab [Rofi]"
command kwrofi jsb -d¦ apps.kwrofi(JS_ARGS)¦

bind s<C-h> showkeys s
bind sk<C-h> showkeys sk
bind: ska "Search by bookmark keyword in adjacent tab" fillcmdline kwsearch_adj
bind: skb "Search by bookmark keyword in background adjacent tab" fillcmdline kwsearch_bg
bind: skk "Search by bookmark keyword in last tab" fillcmdline kwsearch
bind: sko "Search by bookmark keyword in current tab" fillcmdline kwsearch_here
bind: sks "Search by bookmark keyword in last tab [Rofi]" fillcmdline kwrofi

bind ss fillcmdline open search
bind s/ fillcmdline find

bind n findnext
bind N findnext
bind ? fillcmdline find -?
bind <C-/> clearsearchhighlight

" ╭───────────────╮
" │ <C-h> -- help │
" ╰───────────────╯
command showkeys fillcmdline_notrail bind
command showkeysurl fillcmdline_notrail bindurl
command searchnmaps jsb -d¦ utils.tri.searchNmapsWrapper(JS_ARGS.join(" "))¦

bind <C-h><C-h> showkeys <C-h>
bind <C-h>h fillcmdline help
bind <C-h>i tabopen moz-extension://926899c1-24a3-4569-9789-2f53b837f92e/static/docs/globals.html
bind <C-h>k fillcmdline searchnmaps
bind <C-h>d tabopen about:devtools-toolbox?id=tridactyl.vim.betas%40cmcaine.co.uk&type=extension

" ╭───────────╮
" │ y -- yank │
" ╰───────────╯
bind y<C-h> showkeys y
bind y? jsb tri.excmds.yank(JSON.stringify(tri.config.USERCONFIG))

" ╭───────────╮
" │ e -- goto │
" ╰───────────╯
bind e<C-h> showkeys e
bind ea tabopen about:addons
bind ec tabopen about:config
bind ed tabopen about:downloads
bind eD tabopen about:debugging

" | el -- goto/local |
bind el<C-h> showkeys el
bind eldw  tabopenorswitchc file:///home/troy/Downloads
bind eldc  tabopenorswitchc file:///home/troy/Documents

" | el -- goto/local/ebooks |
bind el<C-h> showkeys el
bind ele/  tabopenorswitchc file:///home/troy/ebooks
bind elec  tabopenorswitchc file:///home/troy/ebooks/coding
bind eled  tabopenorswitchc file:///home/troy/ebooks/dl
bind elel  tabopenorswitchc file:///home/troy/.readinglist
bind eles  tabopenorswitchc file:///home/troy/ebooks/cs
bind elea  tabopenorswitchc file:///home/troy/ebooks/articles

" | el -- goto/local/home |
bind el<C-h> showkeys el
bind elhe  tabopenorswitchc file:///home/troy/.emacs.d/private
bind elhh  tabopenorswitchc file:///home/troy
bind elhp  tabopenorswitchc file:///home/troy/.pentadactyl
bind elhr  tabopenorswitchc file:///home/troy/repos
bind elhs  tabopenorswitchc file:///home/troy/source
bind elht  tabopenorswitchc file:///home/troy/.tridactyl

" | el -- goto/local/opt |
bind el<C-h> showkeys el
bind elo/  tabopenorswitchc file:///opt
bind eloc  tabopenorswitchc file:///opt/chrome-extensions
bind elod  tabopenorswitchc file:///opt/deb
bind elof  tabopenorswitchc file:///opt/ff-addons
bind elos  tabopenorswitchc file:///opt/scripts
bind elou  tabopenorswitchc file:///opt/userscripts
bind eloU  tabopenorswitchc file:///opt/userstyles
bind elow  tabopenorswitchc file:///opt/webapps

" | el -- goto/local/pictures |
bind el<C-h> showkeys el
bind elp/   tabopenorswitchc file:///home/troy/Pictures
bind elpa   tabopenorswitchc file:///home/troy/Pictures/art
bind elpd   tabopenorswitchc file:///home/troy/Pictures/downloads
bind elpv   tabopenorswitchc file:///home/troy/Pictures/vlc-snapshot

" | el -- goto/local/usr |
bind el<C-h> showkeys el
bind elud   tabopenorswitchc file:///usr/share/doc/
bind eluld  tabopenorswitchc file:///usr/local/share/doc/

" | ey -- goto/dactyl |
bind eyss fillcmdline_notrail tabopenorswitchc https://github.com/tridactyl/tridactyl/tree/master/src/

command gotoCommandSource jsb -p utils.tri.gotoCommandSource(JS_ARG);

bind es tabopen about:support
bind etc fillcmdline gotoCommandSource

" ╭───────────╮
" │ a -- apps │
" ╰───────────╯
command withurl composite get_current_url |

unbind a
bind a<C-h> showkeys a
bind ac withurl ! /usr/local/bin/google-chrome
bind af withurl ! /opt/waterfox/waterfox --new-tab


" | a; -- apps/hints |
bind a;<C-h> showkeys a;
bind a;c composite hint -pipe a href | ! /usr/local/bin/google-chrome
bind a;f composite hint -pipe a href | ! /opt/waterfox/waterfox

" ╭─────────────────╮
" │ x -- extensions │
" ╰─────────────────╯
bind x<C-h> showkeys x

" |xr -- rikairebuilt |
bind xr<C-h> showkeys xr
" rikairebuilt toggle
bind xrr xdo mousemove 1861 111 click 1
" addon page
bind xra tabopenorswitchc https://addons.mozilla.org/en-GB/firefox/addon/rikaihan/
" source page
bind xrs tabopenorswitchc https://github.com/Garethp/RikaiRebuilt
" config page
bind xrc winopen moz-extension://41d2b8bf-2a97-4468-87c8-f6243594c04c/options/options.html

" ╭─────────────╮
" │ , -- leader │
" ╰─────────────╯
bind ,<C-h> showkeys ,

" | ,a -- apps |
bind ,a<C-h> showkeys ,a
" Open banking
bind ,ab withjsb user.bankurl | tabopenorswitchc
" Open Paypal
bind ,ap tabopenorswitchc https://www.paypal.com/myaccount/home
" Open MyGov
bind ,ay tabopenorswitchc https://my.gov.au/LoginServices/main/login?execution=e1s1

" | ,am -- mail/contacts |
bind ,am<C-h> showkeys ,am
bind ,amc tabopenorswitchc https://contacts.google.com/?hl=en&tab=mC
bind ,amC tabopenorswitchc https://mail.google.com/mail/u/0/h/k4067n2i55u9/?&v=cl
bind ,amm tabopenorswitchc https://mail.google.com/mail/u/0/h/1f0xqcpo2pdl3/?f=1
bind ,amM tabopenorswitchc https://mail.google.com/mail/u/0/#inbox
bind ,amy tabopenorswitchc https://au.mail.yahoo.com/d/folders/1

" | ,av -- AV |

bind ,av<C-h> showkeys ,av
bind: ,ava "AccuRadio Classical" tabopenorswitchc https://www.accuradio.com/classical/
bind: ,avd "Open Disney Plus" tabopenorswitchc https://www.disneyplus.com/en-gb/home
bind: ,avn "Open Netflix" tabopenorswitchc https://www.netflix.com/
bind: ,avp "Goto Amazon Prime Video" tabopenorswitchc https://www.primevideo.com/storefront/home/ref=atv_nb_logo
bind: ,avy "Goto Youtube" tabopenorswitchc https://www.youtube.com/

" | ,aw -- web/weather |
bind ,aw<C-h> showkeys ,aw
" Show Goonellabah Sunrise and Sunset Times
bind ,aws jsb var [sr,ss]=apps.sunriseSunset(...user.latlong); utils.yankWithMsg(`SUNRISE: ${sr}\nSUNSET:  ${ss}`);
" Open Lismore Weather (BoM)
bind ,aww tabopenorswitchc http://www.bom.gov.au/nsw/forecasts/lismore.shtml
" Open Goonellabah Weather (timeanddate.com)
bind ,awt tabopenorswitchc https://www.timeanddate.com/weather/@2164966

" | ,c -- command-line |
command cmdYankHistoryItem jsb -d¦ utils.tri.cmdYankHistory(utils.tri.parseArgs(JS_ARGS))¦
command cmdYankHistoryItems jsb -d¦ utils.tri.cmdYankHistoryLastN(JS_ARGS[1]||1)¦

bind ,c<C-h> showkeys ,c
bind ,cc cmdYankHistoryItem
bind ,cC cmdYankHistoryItems
bind ,cr composite fillcmdline_notrail ; ex.prev_history ; text.beginning_of_line ; text.forward_word ; text.kill_word

" | ,e -- javascript eval |
command jse js -d¦ alert(eval(JS_ARGS.join(" ")))¦
command getproperties js -d¦ alert(Object.getOwnPropertyNames(eval(JS_ARGS.join(" "))).join("\n"))¦
command jsbe jsb -d¦ tri.excmds.jsb(`tri.excmds.fillcmdline_nofocus(${JS_ARGS.join(" ")})`)¦
command getselector js -d¦ alert([...document.querySelectorAll(JS_ARGS.join(" "))].map(t=>t.tagName+"\t"+t.innerText.slice(0,50).replace("\n","\t")).join("\n"))¦

bind ,e<C-h> showkeys ,e
bind ,eb fillcmdline jsbe
bind ,ec js -s ~/.tridactyl/cutils.js
bind ,ee fillcmdline jse
bind ,ep fillcmdline getproperties
bind ,es fillcmdline getselector

" | ,j -- japanese |
bind ,j<C-h> showkeys ,j
" Jisho kanji search (hints)
bind ,jf js window._dactylargs=[jishoKanjiSearch]; hints.show('カ');
" Jisho search (clipboard)
bind ,jj fillcmdline tabopenorswitchc http://jisho.org/search/

" | ,jk -- kanji |
bind ,jk<C-h> showkeys ,jk
" Google Translate handwritten input
bind ,jkh tabopenorsummon https://translate.google.com.au/#ja/en/
" Jisho kanji search (clipboard)
bind ,jkp pastef http://jisho.org/search/${s}%20%23kanji | tabopenorswitchc
" Jisho kanji radical search
bind ,jkr tabopenorswitchc https://jisho.org/#radical
" Visual Kanji Search - similar kanji (clipboard)
bind ,jkv pastef https://thekanjimap.com/index.html?k=${s} | tabopenorswitchc

" | ,v -- conversion |
command convertunits jsb -d¦ apps.convertUnits(JS_ARGS).then(s=>tri.excmds.fillcmdline_nofocus(s))¦
bind ,vv fillcmdline convertunits

command copytablecols withjs -s ~/.tridactyl/cutils.js ; js -d¦ tri.controller.acceptExCmd(`hint -c table -F t=>cutils.yankWithMsg(cutils.extractTableColumns(t, [${JS_ARGS.slice(1).join(",")}]), {useAlert:true})`)¦
command copytablecols_strict withjs -s ~/.tridactyl/cutils.js ; js -d¦ tri.excmds.fillcmdline(`hint -c table -F t=>cutils.yankWithMsg(cutils.extractTableColumns(t, [${JS_ARGS.slice(1).join(",")}], {strict:true}), {useAlert:true})`)¦

" | ,x -- miscellaneous |
bind ,x<C-h> showkeys ,x
bind ,xt<C-h> showkeys ,xt
bind ,xtc fillcmdline copytablecols
bind ,xtC fillcmdline copytablecols_strict

" ╭─────────────╮
" │ ,, -- hints │
" ╰─────────────╯
bind ,,<C-h> showkeys ,,
bind ,,c hint -c [class*="expand"],[class="togg"]

" middle and right click using xdotool
bind ,,x xdoelem -F -e click 2
bind ,,m xdoelem -F -e click 3

" | ,,f -- numeric hints: allow alphabetic filtering |
bind ,,f<C-h> showkeys ,,f
bind ,,fb  composite set hintchars 0123456789 ; hint -b ; unset hintchars
bind ,,ff  composite set hintchars 0123456789 ; hint ; unset hintchars
bind ,,ft  composite set hintchars 0123456789 ; hint -t ; unset hintchars

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────────────────────────────╮
" │ ex/insert/input-mode keybindings │
" ╰──────────────────────────────────╯

" src/libs/editor.ts
bind --mode=ex      <C-a>    text.beginning_of_line
bind --mode=insert  <C-a>    text.beginning_of_line
bind --mode=input   <C-a>    text.beginning_of_line
bind --mode=ex      <C-e>    text.end_of_line
bind --mode=insert  <C-e>    text.end_of_line
bind --mode=input   <C-e>    text.end_of_line
bind --mode=ex      <C-f>    text.forward_char
bind --mode=insert  <C-f>    text.forward_char
bind --mode=input   <C-f>    text.forward_char
bind --mode=ex      <C-b>    text.backward_char
bind --mode=insert  <C-b>    text.backward_char
bind --mode=input   <C-b>    text.backward_char
bind --mode=ex      <C-k>    text.kill_line
bind --mode=insert  <C-k>    text.kill_line
bind --mode=input   <C-k>    text.kill_line
bind --mode=ex      <C-u>    text.backward_kill_line
bind --mode=insert  <C-u>    text.backward_kill_line
bind --mode=input   <C-u>    text.backward_kill_line
bind --mode=ex      <C-l>    text.delete_char
bind --mode=insert  <C-l>    text.delete_char
bind --mode=input   <C-l>    text.delete_char
bind --mode=ex      <C-d>    text.delete_char
bind --mode=insert  <C-d>    text.delete_char
bind --mode=input   <C-d>    text.delete_char
bind --mode=ex      <C-h>    text.delete_backward_char
bind --mode=insert  <C-h>    text.delete_backward_char
bind --mode=input   <C-h>    text.delete_backward_char
bind --mode=ex      <C-y>    composite getclip selection | text.insert_text
bind --mode=insert  <C-y>    composite getclip selection | text.insert_text
bind --mode=input   <C-y>    composite getclip selection | text.insert_text

" src/libs/commandline_cmds.ts
bind --mode=ex  <C-n>      ex.next_history
bind --mode=ex  <C-p>      ex.prev_history
bind --mode=ex  <Tab>      ex.next_completion
bind --mode=ex  <S-Tab>    ex.prev_completion
bind --mode=ex  <C-/>      ex.deselect_completion
bind --mode=ex  <A-w>      ex.execute_ex_on_completion clipboard yank

bind --mode=insert  <C-m>    withjsb user.email      | text.insert_text
bind --mode=insert  <C-M>    withjsb user.email2     | text.insert_text
bind --mode=insert  <C-I>    withjsb user.name       | text.insert_text
bind --mode=insert  <C-T>    withjsb user.firstname  | text.insert_text
bind --mode=insert  <C-L>    withjsb user.lastname   | text.insert_text
bind --mode=insert  <C-A>    withjsb user.street     | text.insert_text
bind --mode=insert  <C-S>    withjsb user.suburb     | text.insert_text
bind --mode=insert  <C-D>    withjsb user.address    | text.insert_text
bind --mode=insert  <C-P>    withjsb user.phone      | text.insert_text
bind --mode=insert  <C-B>    withjsb user.mobile     | text.insert_text
bind --mode=insert  <C-Z>    withjsb user.postcode   | text.insert_text
bind --mode=insert  <C-Q>    withjsb user.masterpw   | text.insert_text
bind --mode=insert  <C-C>    withjsb user.creditcard | text.insert_text

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────╮
" │ Finalize │
" ╰──────────╯
fillcmdline_nofocus tridactylrc: FINISHED