" ╭────────────────╮
" │                │
" │  .tridactylrc  │
" │                │
" ╰────────────────╯

" ╭───────╮
" │ notes │
" ╰───────╯
" || can't be used in :js(b) statements, so we have to use `!expr1 && expr2` for OR control flow

" ───────────────────────────────────────────────────────────────────────────────
" ╭─────────╮
" │ General │
" ╰─────────╯

" loader for content script libraries
jsb -r jsload.js
" general libraries
jsb -r S.js
jsb -r js/sprintf.js
" hints
jsb -r hints.js
" tridactyl-specific libraries
jsb -r utils.js
" url manipulation library
jsb -r urls.js
" xdotool library
jsb -r xdo.js
" app-specific libraries
jsb -r js/suncalc.js
" shell commands library
jsb -r shell.js
" app-specific code
jsb -r apps.js
" bookmarks, history, downloads
jsb -r places.js
" site-specific code
jsb -r sites.js
" personal info
jsb -r personal/personal.js

jsb window.S = S
jsb window.hints = hints
jsb window.utils = utils
jsb window.urls = urls
jsb window.xdo = xdo
jsb window.shell = shell
jsb window.apps = apps
jsb window.sites = sites
jsb window.sprintf = sprintf

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────────────────╮
" │ Documentation commands │
" ╰────────────────────────╯
" Create versions of definition commands taking descriptions
command docdef jsb -d‖ utils.tri.docdef(JS_ARGS)‖
command docset jsb -d‖ utils.tri.docdef(JS_ARGS, { noDef: true })‖
command command: docdef command
command commdoc docset command
command bdoc docset bind
commdoc docbindmode "bind for mode with description"
command docbindmode jsb -d¦ utils.tri.docBindMode(JS_ARGS)¦
command bindmode jsb -d¦ utils.tri.bindMode(JS_ARGS)¦
command unbindmode jsb -d¦ utils.tri.unbindMode(JS_ARGS)¦

command: ibind "bind for insert/input-mode" bindmode i
command: vbind "bind for visual-mode" bind --mode=visual
command: cbind "bind for ex-mode" bind --mode=ex
command: abind "bind for normal, insert, input, ex, visual and hint modes" bindmode all
command: bind: "bind with description" docdef bind
command: ibind: "bind for insert/input-mode with description" docbindmode i
command: vbind: "bind for visual-mode with description" docbindmode visual
command: cbind: "bind for ex-mode with description" docbindmode ex
command: abind: "bind for normal, insert, input, ex, visual and hint modes with description" docbindmode all
command: bindurl: "bindurl with description" jsb -d¦ utils.tri.docBindUrl(JS_ARGS)¦
command: set: "set with description" docdef set
command: setpref: "setpref with description" docdef setpref
command: guiset_quiet: "guiset_quiet with description" docdef guiset_quiet

command: commdoc "provide a description for a command definition on a separate line" docset command
command: bdoc "provide a description for a bind definition on a separate line" docset bind

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────────────────╮
" │ sourced config files │
" ╰──────────────────────╯
source /home/troy/.tridactyl/sites.tri
command: modload "Load module" jsb -d¦ sites.load(JS_ARGS[1])¦

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────╮
" │ Settings │
" ╰──────────╯
jsb -r settings.js

command: loadsettings "Load settings from settings.tri" withjsb -r settings.js ; source ~/.tridactyl/settings.tri

" Autocommands
autocmd TabEnter .* unfocus

jsb browser.webRequest.onHeadersReceived.addListener(tri.request.clobberCSP,{urls:["<all_urls>"],types:["main_frame"]},["blocking","responseHeaders"])

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────╮
" │ Finalize │
" ╰──────────╯
fillcmdline_nofocus tridactylrc: FINISHED