" ╭───────────╮
" │ SITES.tri │
" ╰───────────╯
command definesearch jsb -d¦ utils.tri.defineSearch(...parseArgs(JS_ARGS))¦

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────╮
" │ Containers │
" ╰────────────╯
set auconcreatecontainer true
autocontain -s commbank.com.au Banking

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────────╮
" │ Aliexpress.com │
" ╰────────────────╯
autocontain -s aliexpress.com Shopping

command: alibind "Bind key for Aliexpress.com" bindurl aliexpress.com
command: alibind: "Bind key with description for Aliexpress.com" bindurl: aliexpress.com
command: alireset "Reset key for Aliexpress.com" reseturl aliexpress.com
command: alibdoc "Provide a description on a separate line" js ;
command: alishowkeys "(show bindings: ali)" showkeysurl aliexpress.com

alibind: c<C-h> "(show bindings: ali)" alishowkeys c
alibind: cc "ali: go" sitejs csites.ali.go()
alibind: coo "ali: goto orders" openorsummonc https://www.aliexpress.com/p/order/index.html

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────╮
" │ Amazon.com │
" ╰────────────╯
autocontain -s amazon.com Shopping
autocontain -s amazon.com.au Shopping

command: amazbind "Bind key for amazon.com" bindurl amazon.com
command: amazbind: "Bind key with description for amazon.com" bindurl: amazon.com
command: amazbdoc "Provide a description on a separate line" js ;
command: amazshowkeys "(show bindings: amaz)" showkeysurl amazon.com

definesearch amaz_search https://www.amazon.com.au/s?k=%s +

amazbind: f "hint links" hint a,img,input,select
amazbind: F "hint links" hint -b a,img,input,select
amazbind: g;s "Focus search box" cujs $id("twotabsearchtextbox").focus()
amazbind: ;i "Open image (full size)" hint img -F e=>open(e.src.replace(/\._[^.]+\./, "."))
amazbind: ;I "Open image (full size): new tab" hint img -F e=>tabopen(e.src.replace(/\._[^.]+\./, "."))
amazbind: [[ "Previous page" sitejs csites.amaz.previous()
amazbind: ]] "Next page"  sitejs csites.amaz.next()

amazbind: c<C-h> "(show bindings: amaz)" amazshowkeys c
amazbind: cc "Add to cart/goto checkout" sitejs csites.amaz.go()
amazbind: cf "Fix right column CSS" sitejs csites.amaz.fixRightCol()
amazbind: cn "Buy now" sitejs csites.amaz.buy()

" | co -- amazon/goto |
amazbind: co<C-h> "(show bindings: amaz/goto)" amazshowkeys co
amazbind: coc "Goto cart" urlmodorsummon_g /gp/cart/view.html/ref=nav_cart
amazbind: cod "Goto deals" opos urlmodorsummon_g https://www.amazon.com.au/deals
amazbind: coh "Goto history" urlmodorsummon_g /gp/history
amazbind: coi "Scroll to Product Information" cujs $1("#prodDetails").scrollIntoView();
amazbind: cok "Scroll to Related Products" cujs $1t(".a-carousel-heading", "Custom.*also viewed").scrollIntoView();
amazbind: col "Goto lists" urlmodorsummon_g /registry/wishlist/ref=cm_wl_your_lists
amazbind: coo "Goto orders" urlmodorsummon_g /gp/css/order-history/ref=nav_nav_orders_first
amazbind: cor "Goto reviews" cujs $1("#customerReviews").scrollIntoView()
amazbind: coR "Goto all reviews" cujs click("a[data-hook=see-all-reviews-link-foot]")
amazbind: cow "Goto wish list" urlmodorsummon_g /hz/wishlist/ls/
amazbind: co! "Goto contact form" urlmodorsummon_g /gp/help/customer/contact-us/ref=cu_surl

" | cs -- amazon/search |
amazbind: cs<C-h> "(show bindings: amaz/search)" amazshowkeys cs
amazbind: css "Amazon AU Search (new tab)" : amaz_search tab
amazbind: csS "Amazon AU Search (current tab)" : amaz_search here
amazbind: csg "Search Google for term" sitejs_count! urlopen(`g ${csites.amaz.term()}`, COUNT?"here":"related")
amazbind: csG "Search Google for item" sitejs_count! urlopen(`g ${csites.amaz.title()}`, COUNT?"here":"related")

" | ct -- amazon/toggle |
amazbind: ct<C-h> "(show bindings: amaz/toggle)" amazshowkeys ct
amazbdoc cta "Toggle Australian site"
amazbind cta jsb urls.mod.togglepage('www.amazon.com/', 'www.amazon.com.au/', /(www|smile)\.amazon\.com\//)

amazbind: cxt "Translate all reviews" cujs click("a",/translate review/i)

" ───────────────────────────────────────────────────────────────────────────────
" ╭───────────────────╮
" │ AnimatedKnots.com │
" ╰───────────────────╯
command: aniknotbind "Bind key for AnimatedKnots.com" bindurl animatedknots.com
command: aniknotreset "Reset key for AnimatedKnots.com" reseturl: animatedknots.com
command: aniknotbind: "Bind key with description for AnimatedKnots.com" bindurl: animatedknots.com
command: aniknotbdoc "Provide a description on a separate line" js ;
command: aniknotshowkeys "(show bindings: aniknot)" showkeysurl animatedknots.com

aniknotbind: c<C-h> "(show bindings: aniknot)" showkeysurl animatedknots.com c

aniknotbind: <Enter> "Next frame" jsinject nextFrame()
aniknotbind: <S-Enter> "Previous frame" jsinject prevFrame()
aniknotbind: <Space> "Pause/Play" jsinject stopGo()


" ───────────────────────────────────────────────────────────────────────────────
" ╭─────────────╮
" │ archive.org │
" ╰─────────────╯
bindurl archive.org ctt sitejs -r urls.js ; js csites.archive.toggleToolbarURL()

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────────╮
" │ Coles.com.au │
" ╰──────────────╯
autocontain -s coles.com.au Shopping

command: colesbind "Bind key for coles.com.au" bindurl coles.com.au
command: colesbind: "Bind key with description for coles.com.au" bindurl: coles.com.au
command: colesbdoc "Provide a description on a separate line" js ;
command: colesshowkeys "(show bindings: coles)" showkeysurl coles.com.au

colesbind g;s cujs $1("#searchTerm").focus()
colesbind c<C-h> colesshowkeys c

colesbind cc sitejs csites.coles.go()

" | co -- coles/goto |
colesbind: co<C-h> "(show bindings: coles/goto)" colesshowkeys co
colesbind: coo "Goto orders" opos https://www.coles.com.au/account/orders
colesbind: cor "Goto Buy Again" opos https://www.coles.com.au/bought-before

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────╮
" │ Ebay.com │
" ╰──────────╯
autocontain -s ebay.com Shopping

command: ebaybind "Bind key for ebay.com" bindurl ebay.com
command: ebaybind: "Bind key with description for ebay.com" bindurl: ebay.com
command: ebaybdoc "Provide a description on a separate line" js ;
command: ebayshowkeys "(show bindings: ebay)" showkeysurl ebay.com

ebaybind c<C-h> showkeysurl ebay.com c

" | co -- ebay/goto |
ebaybind co<C-h> showkeysurl ebay.com co
ebaybind: coa "Goto Account Settings Page" openorsummonc https://accountsettings.ebay.com.au/uas
ebaybind: coc "Goto Cart" openorsummonc https://cart.ebay.com.au
ebaybind: cof "Leave feedback" openorsummonc https://www.ebay.com.au/fdbk/leave_feedback
ebaybind: cok "Goto Similar Items" cujs $1t("section.merch-module", /people who.*also viewed/i).scrollIntoView();
ebaybind: com "Goto Inbox" openorsummonc https://mesg.ebay.com.au/mesgweb/ViewMessages/0

ebaybind: coo "Goto Orders (Purchase history)" openorsummonc https://www.ebay.com.au/mye/myebay/purchase
ebaybind: cos "Goto My Saved Sellers" openorsummonc https://www.ebay.com.au/myb/SavedSellers
ebaybind: cov "Goto seller's store" sitejs tri.controller.acceptExCmd(`openorsummonc ${csites.e.getStoreURL()}`);
ebaybind: cow "Goto watch list" openorsummonc https://www.ebay.com.au/myb/WatchList
ebaybind: coy "Goto My eBay" openorsummonc https://www.ebay.com.au/myb/Summary
ebaybind: co/ "Goto My saved searches" openorsummonc https://www.ebay.com.au/myb/SavedSearches

" | cx -- ebay/misc |
ebaybind: cx<C-h> "(show bindings: ebay/misc)" ebayshowkeys cx
ebaybind: cxf "Filter free postage items" sitejs csites.e.filterFreePostage()

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────╮
" │ fandom.com │
" ╰────────────╯
command: fandombind "Bind key for fandom.com" bindurl fandom.com
command: fandombind: "Bind key with description for fandom.com" bindurl: fandom.com
command: fandombdoc "Provide a description on a separate line" js ;
command: fandomshowkeys "(show bindings: fandom)" showkeysurl fandom.com

command: fandom_search "Search fandom.com" sitejs -d¦ csites.f.search(JS_ARGS.join(" "), "here")¦
command: fandom_tabsearch "Search fandom.com" sitejs -d¦ csites.f.search(JS_ARGS.join(" "), "related")¦

fandombind: c<C-h> "(show bindings: fandom)" showkeysurl fandom.com c
fandombind: cs<C-h> "(show bindings: fandom/search)" showkeysurl fandom.com cs
fandombind: css "Search wiki" :fill `fandom_${COUNT?"":"tab"}search`

" ───────────────────────────────────────────────────────────────────────────────
" ╭─────────╮
" │ file:// │
" ╰─────────╯
command fbind: bindurl: file://
command fbind bindurl file://

fbind: c<C-h> "(show bindings: file:)" showkeysurl file:// c
fbind: cc "Copy filename" hint -p -c a.file,a.dir
fbind: ch "Toggle hidden files" cujs $1("#UI_showHidden>label>input").click()
fbind: cw "Toggle body width" js document.body.style.maxWidth = document.body.style.maxWidth ? "" : "130em"

" ───────────────────────────────────────────────────────────────────────────────
" ╭───────────────╮
" │ getcomics.org │
" ╰───────────────╯
command: gcbind "Bind key for getcomics.org" bindurl getcomics.org
command: gcbind: "Bind key with description for getcomics.org" bindurl: getcomics.org
command: gcreset "Reset key for getcomics.org" reseturl getcomics.org
command: gcbdoc "Provide a description on a separate line" js ;
command: gcshowkeys "(show bindings: gc)" showkeysurl getcomics.org

command gc_js "Run javascript after loading csites.jsfile (default COUNT=1)" cujs -r csites.js ; js_count
command gc_js! "Run javascript after loading csites.js file (default COUNT=null)" cujs -r csites.js ; js_count!

definesearch gc_search https://getcomics.org/?s=%s +

gcbind: c<C-h> "(show bindings: gc)" gcshowkeys c
gcbind: css "GetComics Search (new tab)" : gc_search tab
gcbind: csS "GetComics Search (here)" : gc_search here

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────╮
" │ Github.com │
" ╰────────────╯
command ghbind bindurl github.com
command ghbind: bindurl: github.com
command ghopenorsummon jsb -p sites.gh.openOrSummon(JS_ARG);
command ghtabopenorsummon jsb -p sites.gh.openOrSummon(JS_ARG, {where: "related"});
command gh_search jsb -d¦ sites.gh.search(window._ghsearchurl, JS_ARGS[1], JS_ARGS.slice(2).join(" "))¦
command gh_tabsearch jsb -d¦ sites.gh.search(window._ghsearchurl, JS_ARGS[1], JS_ARGS.slice(2).join(" "), {where: "related"})¦
command gh_searchwrapper jsb -d¦ sites.gh.searchWrapper(JS_ARGS)¦
command gh_tabsearchwrapper jsb -d¦ sites.gh.searchWrapper(JS_ARGS, {where: "related"})¦

ghbind c<C-h> showkeysurl github.com c
ghbind cc xdoelem .pl-en -e click 1
ghbind c8 cujs $1t("button", "Star").click()
ghbind c* cujs $1t("button", "Star").click()

ghbind: cdr "Download README to /opt/doc" jsb sites.gh.saveReadme()

" | cm -- Github/My |
ghbind: cmC "My comments" ghopenorsummon https://github.com/search?utf8=✓&q=+is:issue+commenter:${a};
ghbind: cmr "My forks" ghopenorsummon https://github.com/${a}?tab=repositories&type=fork
ghbind: cmg "My gists" ghopenorsummon https://gist.github.com/${a}
ghbind: cmG "My starred gists" ghopenorsummon https://gist.github.com/${a}/starred
ghbind: cmm "My profile" ghopenorsummon https://github.com/${a}
ghbind: cmr "My repositories (sources)" ghopenorsummon https://github.com/${a}?tab=repositories&type=source
ghbind: cmR "My repositories" ghopenorsummon https://github.com/${a}?tab=repositories
ghbind: cms "My stars" ghopenorsummon https://github.com/${a}?tab=stars
" | cm; -- Github/My/New Tab |
ghbind: cm;C "My comments (new tab)" ghtabopenorsummon https://github.com/search?utf8=✓&q=+is:issue+commenter:${a};
ghbind: cm;r "My forks (new tab)" ghtabopenorsummon https://github.com/${a}?tab=repositories&type=fork
ghbind: cm;g "My gists (new tab)" ghtabopenorsummon https://gist.github.com/${a}
ghbind: cm;G "My starred gists (new tab)" ghtabopenorsummon https://gist.github.com/${a}/starred
ghbind: cm;m "My profile (new tab)" ghtabopenorsummon https://github.com/${a}
ghbind: cm;r "My repos (sources, new tab)" ghtabopenorsummon https://github.com/${a}?tab=repositories&type=source
ghbind: cm;R "My repositories (new tab)" ghtabopenorsummon https://github.com/${a}?tab=repositories
ghbind: cm;s "My stars (new tab)" ghtabopenorsummon https://github.com/${a}?tab=stars

" | co -- Github/Open |
ghbind: cmc "Open commits" ghopenorsummon https://github.com/${u/r}/commits
ghbind: cog "Open gists" ghopenorsummon https://gist.github.com/${u}
ghbind: coi "Open issues" ghopenorsummon https://github.com/${u/r}/issues
ghbind: coI "Open issues.csv" ghopenorsummon https://api.github.com/repos/${u/r}/issues
ghbind: com "User's comments" ghopenorsummon https://github.com/search?utf8=✓&q=+is:issue+commenter:${u}
ghbind: coo "Open profile (overview)" ghopenorsummon https://github.com/${u}
ghbind: cop "Open PRs" ghopenorsummon https://github.com/${u/r}/pulls
ghbind: cor "Open repositories" ghopenorsummon https://github.com/${u}?tab=repositories
ghbind: cos "Open settings" ghopenorsummon https://github.com/settings
" | co; -- Github/Open/New Tab |
ghbind: cm;c "Open commits (new tab)" ghtabopenorsummon https://github.com/${u/r}/commits
ghbind: co;g "Open gists (new tab)" ghtabopenorsummon https://gist.github.com/${u}
ghbind: co;i "Open issues (new tab)" ghtabopenorsummon https://github.com/${u/r}/issues
ghbind: co;I "Open issues.csv (new tab)" ghtabopenorsummon https://api.github.com/repos/${u/r}/issues
ghbind: co;m "User comments (new tab)" ghtabopenorsummon https://github.com/search?utf8=✓&q=+is:issue+commenter:${u}
ghbind: co;o "Open profile (overview) (new tab)" ghtabopenorsummon https://github.com/${u}
ghbind: co;p "Open PRs (new tab)" ghtabopenorsummon https://github.com/${u/r}/pulls
ghbind: co;r "Open repositories (new tab)" ghtabopenorsummon https://github.com/${u}?tab=repositories
ghbind: co;s "Open settings (new tab)" ghtabopenorsummon https://github.com/settings

" | cs -- Github/Search |
ghbind cs<C-h> showkeys cs
ghbind css gh_searchwrapper "search Github" https://github.com/search?utf8=✓&q=${s}&type=Repositories&ref=searchresults
ghbind csf gh_searchwrapper "search my forks" https://github.com/${a}?tab=repositories&type=fork&q=${s}
ghbind csg gh_searchwrapper "search gists" https://gist.github.com/search?q=${s}
ghbind csi gh_searchwrapper "search issues" https://github.com/tridactyl/tridactyl/issues?q=is:issue+${s}
ghbind csp gh_searchwrapper "search PRs" https://github.com/${u/r}/pulls?q=${s}
ghbind csr gh_searchwrapper "search repos" https://github.com/${u}?tab=repositories&q=${s}
ghbind cs* gh_searchwrapper "search my stars" https://github.com/${a}?tab=stars&q=${s}

" | cs; -- Github/Search/New Tab |
ghbind cs;<C-h> showkeys cs
ghbind cs;s gh_tabsearchwrapper "search Github [new tab]" https://github.com/search?utf8=✓&q=${s}&type=Repositories&ref=searchresults
ghbind cs;f gh_tabsearchwrapper "search my forks [new tab]" https://github.com/${a}?tab=repositories&type=fork&q=${s}
ghbind cs;g gh_tabsearchwrapper "search gists [new tab]" https://gist.github.com/search?q=${s}
ghbind cs;i gh_tabsearchwrapper "search issues [new tab]" https://github.com/tridactyl/tridactyl/issues?q=is:issue+${s}
ghbind cs;p gh_tabsearchwrapper "search PRs [new tab]" https://github.com/${u/r}/pulls?q=${s}
ghbind cs;r gh_tabsearchwrapper "search repos [new tab]" https://github.com/${u}?tab=repositories&q=${s}
ghbind cs;* gh_tabsearchwrapper "search my stars [new tab]" https://github.com/${a}?tab=stars&q=${s}

ghbind: ctw "Toggle widen README" toggleprop div.Box-body style.maxWidth 1600px

" | cy -- gh/yank |
ghbind: cy<C-h> "(show bindings: gh/yank)" ghshowkeys cy
ghbind: cya "Yank About text" sitejs csites.gh.getDescription() | yank!
ghbdoc cym "Yank * name: description ( <url> )"
ghbind cym sitejs `* ${csites.gh.getTitle()}: ${csites.gh.getDescription()} ( < ${tri.contentLocation} > )` | yank!
ghbind: cyn "Yank repo name" :: jsb sites.gh.getUserAndRepo()[1] | yank!
ghbind: cyN "Yank title" sitejs csites.gh.getTitle() | yank!
ghbind: cyR "Yank repo name with URL" :: jsb `${sites.gh.getUser()} (${tri.contentLocation})` | yank!
ghbind: cyu "Yank user/repo name" :: jsb sites.gh.getUserAndRepo().join("/") | yank!
ghbind: cyU "Yank user name"  :: jsb sites.gh.getUser() | yank!

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────╮
" │ Google.com │
" ╰────────────╯
command: googlebind "Bind key for www.google.com" bindurl google.com
command: googlebind: "Bind key with description for www.google.com" bindurl: google.com

googlebind: f "Open link in current tab [HINT]" jsb hints.follow("-J")
googlebind: F "Open link in new tab [HINT]" hint -Jb
googlebind: gf "Open multiple tabs in background tabs [HINNTS]" hint -qJb
googlebind: g;s "Focus search box" cujs $1("input[aria-label=Search]").focus()

googlebind c<C-h> showkeysurl google.com c
googlebind: cc "images: copy src URL" sitejs csites.g.go()

googlebind: cii "Save selected image" hint -A #islsp c-wiz>div>div>div:nth-child(2) img

" | ct -- google/toggle |
googlebind ct<C-h> showkeysurl google.com ct
googlebind: ctn "Toggle Top stories" cujs cutils.hide("g-section-with-header", {toggle:true});

" | cy -- google/yank |
googlebind cy<C-h> showkeysurl google.com cy
googlebind cyy cujs ; hint -Jpipe div.g>div>div>div>a,div>a:nth-child(3) href | yank!

" ───────────────────────────────────────────────────────────────────────────────
" ╭─────────────────╮
" │ Google Calendar │
" ╰─────────────────╯
autocmd DocLoad https://calendar\.google\.com(/|$) js -r sites/gcal.auto.js
autocmd TabEnter https://calendar\.google\.com(/|$) js -r sites/gcal.auto.js

command: gcalbind "Bind key for calendar.google.com" bindurl calendar.google.com
command: gcalbind: "Bind key with description for calendar.google.com" bindurl: calendar.google.com
command: gcalbdoc "Provide a description on a separate line" js ;
command: gcalshowkeys "(show bindings: gcal)" showkeysurl calendar.google.com

gcalbind: c<C-h> "(show bindings: gcal)" showkeysurl calendar.google.com c

gcalbind: <A-enter> "Load sites/gcal.auto.js" js -r sites/gcal.auto.js
gcalbind: cc "Load styles for calendar.google.com" js -r sites/gcal.auto.js

" | co -- gcal/open |
gcalbind: co<C-h> "(show bindings: gcal/open)" showkeysurl calendar.google.com co
gcalbind: coa "Goto Agenda" opos https://calendar.google.com/calendar/u/0/r/agenda/
gcalbind: coc "Custom view" opos https://calendar.google.com/calendar/u/0/r/customday
gcalbind: cod "Day view" opos https://calendar.google.com/calendar/u/0/r/day
gcalbind: com "Month view" opos https://calendar.google.com/calendar/u/0/r/month
gcalbind: cos "Goto Settings" opos https://calendar.google.com/calendar/u/0/r/settings
gcalbind: cow "Week view" opos https://calendar.google.com/calendar/u/0/r/week
gcalbind: coy "Year view" :exec `opos https://calendar.google.com/calendar/u/0/r/year/${(new Date).getYear()+1900}`

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────────╮
" │ Google Earth │
" ╰──────────────╯
seturl https://earth.google.com modeindicator false

" ───────────────────────────────────────────────────────────────────────────────
" ╭───────────╮
" │ Jisho.org │
" ╰───────────╯
command: jishobind "Bind key for jisho.org" bindurl jisho.org
command: jishobind: "Bind key with description for jisho.org" bindurl: jisho.org
command: jishobdoc "Provide a description on a separate line" js ;
command: jishoshowkeys "(show bindings: jisho)" showkeysurl jisho.org

command: j_search "Search jisho.org" jsb -d¦ sites.j.search(JS_ARGS)¦
command: j_kanjisearch "Search jisho.org for kanji" jsb -d¦ sites.j.search(JS_ARGS.join("")+"%20%23kanji")¦

jishobind: c<C-h> "(show bindings: jisho)" jishoshowkeys c

jishobind: cc "Select kanji radical" hint li.radical.available,li.radical.selected
jishobdoc cl "Links drop-down"
jishobind cl cshint a.concept_light-status_link[data-dropdown] -F e=>csites.j.toggleLinksUL(e.nextSibling)

" | cf -- jisho/hints |
jishobind: c;<C-h> "(show bindings: jisho/hints)" jishoshowkeys c;
jishobind: c;e "Goto sentences" jsb sites.j.hintOpen("entry", "sentences")
jishobind: c;k "Kanji details" jsb sites.j.hintOpen("kanji", "kanji", {regex: sites.j.kanjiRegex})
jishobind: c;w "Search entry in Weblio" jsb sites.j.hintOpen("entry", "weblio")

" | cy -- jisho/yank |
jishobind: cy<C-h> "(show bindings: jisho/yank)" jishoshowkeys cy
jishobind: cye "Yank entry" yankhint div.concept_light-representation>span.text,.character

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────╮
" │ Medium.com │
" ╰────────────╯
command: mediumbind "Bind key for Medium.com" bindurl medium.com|scribe.rip
command: mediumbind: "Bind key with description for Medium.com" bindurl: medium.com|scribe.rip
command: mediumreset "Reset key for Medium.com" reseturl medium.com|scribe.rip
command: mediumbdoc "Provide a description on a separate line" js ;
command: mediumshowkeys "(show bindings: medium)" showkeysurl medium.com|scribe.rip

mediumbind: c<C-h> "(show bindings: medium)" mediumshowkeys c
mediumbind: ctt "Toggle scribe.rip" urltoggle medium.com scribe.rip

" ───────────────────────────────────────────────────────────────────────────────
" ╭───────────────╮
" │ Nonograms.org │
" ╰───────────────╯
command: nonobind "Bind key for Nonograms.org" bindurl nonograms.org
command: nonobind: "Bind key with description for Nonograms.org" bindurl: nonograms.org
command: nonoreset "Reset key for Nonograms.org" reseturl nonograms.org
command: nonobdoc "Provide a description on a separate line" js ;
command: nonoshowkeys "(show bindings: nono)" showkeysurl nonograms.org

command nono_js "Run javascript after loading csites.js file (default COUNT=1)" cujs -r csites.js ; js_count
command nono_js! "Run javascript after loading csites.js file (default COUNT=null)" cujs -r csites.js ; js_count!

nonobind: c<C-h> "(show bindings: nono)" nonoshowkeys c

nonobind: <C-l> "Scroll to puzzle" cujs scrollelt("#nonogram_table")
nonobind: cl "Load puzzle" :: click #inpl
nonobind: cs "Save puzzle" :: click #inps ; cujs blink("#nonogram_table","style.backgroundColor", "yellow")
nonobind: cx "Check for errors" :: click #innc ; cujs blink("#nonogram_table","style.backgroundColor", "orange")

" Beta format "
nonobind: cl "Load puzzle" :: click input[value='Load']
nonobind: cs "Save puzzle" :: click input[value='Save'] ; cujs blink("body","style.backgroundColor", "yellow")
nonobind: cx "Check for errors" :: click input[value^=Check] ; cujs blink("body","style.backgroundColor", "orange")
nonobind: <C-l> "Scroll to puzzle" cujs scrollelt("#nonogram_canvas")

" ───────────────────────────────────────────────────────────────────────────────
" ╭─────────────╮
" │ RamdaJS.com │
" ╰─────────────╯
commdoc ramdafiltercat "Filter methods by category"
command ramdafiltercat sitejs -r S.js ; js -p csites.ramda.filterCategory(S.capitalize(JS_ARG));

bindurl ramdajs.com/ c<C-h> showkeysurl ramdajs.com/ c
bindurl: ramdajs.com/ cc "Filter methods by category" fillcmdline ramdafiltercat

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────────────╮
" │ ReadComicOnline.li │
" ╰────────────────────╯
command: rcobind "Bind key for ReadComicOnline.li" bindurl readcomiconline.li
command: rcobind: "Bind key with description for ReadComicOnline.li" bindurl: readcomiconline.li
command: rcoreset "Reset key for ReadComicOnline.li" reseturl readcomiconline.li
command: rcobdoc "Provide a description on a separate line" js ;
command: rcoshowkeys "(show bindings: rco)" showkeysurl readcomiconline.li

rcobind: c<C-h> "(show bindings: rco)" rcoshowkeys c
rcobind: [[ "Previous page" click #btnPrevious
rcobind: ]] "Next page" click #btnNext
rcobind: cc "Download current image" hint -S! #imgCurrent

" ───────────────────────────────────────────────────────────────────────────────
" ╭────────────╮
" │ Reddit.com │
" ╰────────────╯
command: redditbind "Bind key for reddit.com" bindurl reddit.com
command: redditbind: "Bind key with description for reddit.com" bindurl: reddit.com

redditbind c<C-h> showkeysurl reddit.com c
redditbind: cc "Follow reddit link" jsb sites.reddit.go()

" | ct -- reddit/toggle |
redditbind ct<C-h> showkeysurl reddit.com ct
redditbind: cto "Toggle old reddit" urltoggle https://www.reddit.com https://old.reddit.com

" ───────────────────────────────────────────────────────────────────────────────
" ╭───────────────────╮
" │ StackExchange.com │
" ╰───────────────────╯
command: sebind "Bind key for StackExchange.com" bindurl stackexchange.com
command: sebind: "Bind key with description for StackExchange.com" bindurl: stackexchange.com
command: sereset "Reset key for StackExchange.com" reseturl stackexchange.com
command: sebdoc "Provide a description on a separate line" js ;

command se_js "Run javascript after loading csites.js file (default COUNT=1)" cujs -r csites.js ; js_count
command se_js! "Run javascript after loading csites.js file (default COUNT=null)" cujs -r csites.js ; js_count!

command: seshowkeys "(show bindings: se)" showkeysurl stackexchange.com
jsb sites.se.bindShowKey()

command: seexpandcomments "Expand all comments" cujs cutils.click("a.js-show-link", {all:true});

sebind: cc "Expand all comments" seexpandcomments
sebind: cC "Cleanup (remove clutter)" se_js se.cleanup()
sebind: c<C-h> "(show bindings: se)" seshowkeys c

" | cs -- SE/save |
sebind: cs<C-h> "(show bindings: se/save)" seshowkeys cs
sebind: csd "Save draft answer" cujs saveText('.wmd-input',{prop:'value',dir:'~/Documents/drafts'})

" | ct -- SE/toggle |
sebind: ct<C-h> "(show bindings: se/toggle)" seshowkeys ct
sebind: ctw "Toggle widen content" se_js se.widen()

" ───────────────────────────────────────────────────────────────────────────────
" ╭──────────────╮
" │ TVTropes.org │
" ╰──────────────╯
bindurl: tvtropes.org cc "Toggle spoilers" sitejs csites.tvtropes.spoilers()

" ───────────────────────────────────────────────────────────────────────────────
" ╭───────────────────╮
" │ Woolworths.com.au │
" ╰───────────────────╯
autocontain -s woolworths.com.au Shopping

command: woolbind "Bind key for woolworths.com.au" bindurl https://www.woolworths.com.au/
command: woolbind: "Bind key with description for woolworths.com.au" bindurl: https://www.woolworths.com.au/
command: woolbdoc "Provide a description on a separate line" js ;

command: wool_search "Search woolworths" jsb -d¦ sites.wool.search(JS_ARGS, "here")¦
command: wool_search_adj "Search woolworths (adjacent tab)" jsb -d¦ sites.wool.search(JS_ARGS, "related")¦

woolbind c<C-h> showkeysurl https://www.woolworths.com.au/ c

" | co -- woolworths/open |
woolbind co<C-h> showkeysurl https://www.woolworths.com.au/ co
bdoc coc "Goto cart"
woolbind coc cujs if (!cutils.click("button.close-button")) cutils.click("#header-checkout-cart-button")
woolbind: coC "Goto checkout" openorsummon https://www.woolworths.com.au/shop/checkout
woolbind: col "Goto lists" openorsummon https://www.woolworths.com.au/shop/mylists
woolbind: coo "Goto orders" openorsummon https://www.woolworths.com.au/shop/myaccount/myorders
woolbind: cor "Goto reorder" openorsummon https://www.woolworths.com.au/shop/mylists/reorder
woolbind: cot "Open tracking in Chrome" jsb sites.wool.openTracking();

" | cos -- woolworths/open/specials |
woolbind cos<C-h> showkeysurl https://www.woolworths.com.au/ cos
woolbdoc cosp "Goto pantry specials"
woolbind cosp openorsummon https://www.woolworths.com.au/shop/browse/pantry/pantry-specials?pageNumber=1
woolbind: cosh "Goto half-price specials" openorsummon https://www.woolworths.com.au/shop/browse/specials/half-price
woolbind: coss "Goto specials" openorsummon "https://www.woolworths.com.au/shop/browse/specials"

woolbdoc cn "Set no substitutions message for each item"
woolbind cn cujs $$("input[type=checkbox]", $1("wow-checkout-cart")).forEach(e=> e.checked && e.click())

" | cs -- woolworths/search |
woolbind cs<C-h> showkeysurl https://www.woolworths.com.au/ cs
woolbind: css "Search products in current tab" fillcmdline wool_search
woolbind: csa "Search products in adjacent tab" fillcmdline wool_search_adj

" | cx -- woolworths/miscellaneous |
woolbind cx<C-h> showkeysurl https://www.woolworths.com.au/ cx
woolbind: cxe "Empty cart" js clickall("button.remove-button")
woolbdoc cxh "Show only half-price products"
woolbind cxh cujs $$(".product-grid--tile").forEach(e=>{!$1('img[altt"Half Price"]', e) && e.remove()});

" ───────────────────────────────────────────────────────────────────────────────
" ╭─────────────╮
" │ Youtube.com │
" ╰─────────────╯
command: ytbind "Bind key for youtube.com" bindurl youtube.com
command: ytbind: "Bind key for youtube.com" bindurl: youtube.com
command: ytbdoc "Provide a description on a separate line" js ;
command: ytshowkeys "Show key completions for youtube.com" showkeysurl youtube.com
command: yt "Run JS after loading sites/yt.c.js" cujs -r sites/yt.c.js ; js
command: yt_count "Run JS after loading sites/yt.c.js (default COUNT:1)" cujs -r sites/yt.c.js ; js_count
command: yt_count! "Run JS after loading sites/yt.c.js (default COUNT:null)" cujs -r sites/yt.c.js ; js_count!
command: yt_cmd "Run javascript with ARGS after loading sites/yt.c.js" cujs -r sites/yt.c.js ; js_cmd

command: ytseek "Seek to" yt -p yt.seek(JS_ARG)
command: ytsetmark "Set mark" jsb -p tri.controller.acceptExCmd(`yt yt.setMark('${JS_ARG}')`)
command: ytgotomark "Goto mark" jsb -p tri.controller.acceptExCmd(`yt yt.gotoMark('${JS_ARG}')`)
command: ytup "playrate ↑/Show subscriptions ↑" yt -d¦ yt.up(JS_ARGS[1])¦
command: ytdown "playrate ↓/Show subscriptions ↓" yt -d¦ yt.down(JS_ARGS[1])¦
command: ytvolup "volume ↑" yt -d¦ yt.volumeAdjust(JS_ARGS[1])¦
command: ytvoldown "volume ↓" yt -d¦ yt.volumeDown(JS_ARGS[1])¦
command: ytdl "Download video/playlist with youtube-dl" yt -d¦ yt.ytdl(JS_ARGS)¦
command: ytdlaudio "Download audio with youtube-dl" yt -d¦ yt.ytdl(JS_ARGS[1], false)¦
command: ytrate "set playback rate (normal rate = 10)" yt_cmd yt.setSpeed(NUMARG)

ytbind c<C-h> ytshowkeys c

ytbind: cc "Goto item" yt -r capps.js ; js yt.chooseItem()
ytbind: ck "Youtube: set mark" gobble 1 ytsetmark
ytbind: cm "Youtube: set mark" gobble 1 ytsetmark
ytbind: cr "Set rate" fillcmdline ytrate
ytbind: cR "Show rate" yt cutils.message(`playback rate: ${yt.getSpeed()}`, true)
ytbind: cgo "Youtube: goto mark" gobble 1 ytgotomark
ytbind: cx "Youtube: seek to" fillcmdline ytseek
jsb tri.excmds.bindurl("youtube.com", "c'", "gobble 1 gotomark")

" | cd -- youtube/dl |
ytbind: cd<C-h> "(show bindings: yt/dl)" ytshowkeys cd

" | cdd -- youtube/dl/video |
ytbind: cdd<C-h> "(show bindings: yt/dl/video)" ytshowkeys cdd
ytbind: cddd "Download video to Downloads" ytdl
ytbind: cdd: "Download video" fillcmdline ytdl

" | cda -- youtube/dl/audio |
ytbind: cda<C-h> "(show bindings: yt/dl/audio)" ytshowkeys cda
ytbind: cdaa "Download audio to Music directory" ytdlaudio
ytbind: cda: "Download audio" fillcmdline ytdlaudio
ytbind: cds "Screenshot" yt_count! yt.screenshot(Boolean(COUNT))

" | co -- youtube/goto |
ytbind: co<C-h> "(show bindings: youtube/goto)" showkeys co
ytbind: coh "Goto history" opos https://www.youtube.com/feed/history
ytbind: col "Goto library" opos https://www.youtube.com/feed/library

" | ct -- youtube/toggle |
ytbind: ctc "Toggle cinema" click .ytp-size-button
ytbind: ctf "Toggle fullscreen" click .ytp-fullscreen-button
ytbind: ctl "Toggle shorts/long-form player" urltoggle /shorts/ /watch?v=
ytbind: cts "Toggle subtitles" yt yt.player().toggleSubtitles()
ytbind: ctt "Toggle transcript" yt yt.toggleTranscript()

" | cy -- youtube/yank |
ytbind cy<C-h> ytshowkeys cy
ytbind: cyl "Yank playlist items" yt cutils.yank(yt.playlistItems())
ytbind: cyL "Yank playlist items with numbers" yt cutils.yank(yt.playlistItems(true));
ytbind: cyt "Yank transcript" yt yt.openAndCopyTranscript()
ytbind: cyT "Yank transcript with timestamps" yt yt.openAndCopyTranscript(true)

ytbind: <Enter> "Play/Pause" yt yt.togglePause()
ytbind: <PageUp> "Volume ↑" ytvolup
ytbind: <PageDown> "Volume ↓" ytvoldown
jsb utils.tri.docBindUrl("youtube.com > \"playrate ↑/Show subscriptions ↑\" ytup")
jsb utils.tri.docBindUrl("youtube.com < \"playrate ↓/Show subscriptions ↓\" ytdown")
